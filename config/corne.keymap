/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        right_ctrl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <19 20>;
        };

        right_gui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <20 21>;
        };

        right_alt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <21 22>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 21>;
        };

        left_control {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <16 15>;
        };

        left_gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <15 14>;
        };

        left_alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <13 14>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <14 16>;
        };

        sweChar1 {
            bindings = <&kp SQT>;
            key-positions = <2 3>;
        };

        sweChar2 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };
    };

    behaviors {
        leftZShift: leftZShift {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFTZSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 18 30 31 19 7 8 20 32 33 21 9 10 22 34 23 11 35>;
            tapping-term-ms = <149>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <(-1)>;
        };
        CapsWord: CapsWord {
            compatible = "zmk,behavior-caps-word";
            label = "CAPSWORD";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE BACKSPACE DELETE>;
        };
        LeftHomeModRow: LeftHomeModRow {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFTHOMEMODROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <170>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <39 40 41 30 18 6 7 19 31 32 20 8 9 21 33 35 34 22 23 11 10>;
        };
        RightHomeRowMod: RightHomeRowMod {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHTHOMEROWMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <170>;
            global-quick-tap;
            hold-trigger-on-release;
            hold-trigger-key-positions = <29 28 27 26 25 13 1 2 14 15 3 4 16 17 5 38 37 36>;
        };
        specialKeysRight: specialKeysRight {
            compatible = "zmk,behavior-hold-tap";
            label = "SPECIALKEYSRIGHT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                     &kp W  &kp E                   &kp R  &kp T        &kp Y        &kp U       &kp I      &kp O    &kp P                          &none
&none  &kp A                     &kp S  &kp D                   &kp F  &kp G        &kp H        &kp J       &kp K      &kp L    &specialKeysRight 2 SEMICOLON  &none
&none  &leftZShift LEFT_SHIFT Z  &kp X  &kp C                   &kp V  &kp B        &kp N        &kp M       &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH          &none
                                        &kp LA(LC(LG(LSHIFT)))  &mo 3  &kp SPACE    &lt 1 ENTER  &kp ESCAPE  &kp TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none            &none         &none         &none         &none           &none         &none          &none         &none                 &none                  &none
&none  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&none  &kp EXCLAMATION  &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
                                      &none         &none         &kp SPACE       &kp RET       &none          &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none           &kp MINUS             &kp UNDERSCORE         &kp PLUS         &kp EQUAL    &none    &none       &none    &none  &none  &none
&none  &kp LEFT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_BRACE  &kp TILDE    &none    &none       &none    &none  &none  &none
&none  &kp SLASH       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH    &kp GRAVE    &none    &none       &none    &none  &none  &none
                                             &none                  &none            &kp SPACE    &kp RET  &kp ESCAPE  &kp TAB
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp C_VOL_UP       &none
&none       &kp F11       &kp F12       &none         &kp PRINTSCREEN  &none           &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp C_VOLUME_DOWN  &none
&none       &kp F1        &kp F2        &kp F3        &kp F4           &kp F5          &kp F6    &kp F7         &kp F8       &kp F9     &kp F10            &none
                                        &none         &none            &kp SPACE       &kp RET   &kp ESCAPE     &kp TAB
            >;
        };
    };
};
